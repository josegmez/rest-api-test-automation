buildscript {
    repositories {
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:4.2.1")
    }
}

plugins {
    id 'io.github.jumosqu12.screenplayarchitecture' version '1.1.1'
    id 'java'
    id 'eclipse'
    id 'idea'
}

defaultTasks 'clean', 'test', 'aggregate'
apply plugin: 'net.serenity-bdd.serenity-gradle-plugin'

group = 'co.edu.udea.restapi.testing'
version = '1.0-SNAPSHOT'
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

ext {
    serenityVersion = '4.1.0'
    serenityCucumberVersion = '4.1.0'
    lombokVersion = '1.18.22'
    junit = '4.13.2'
    hamcrest = '1.3'

}

dependencies {
    implementation "net.serenity-bdd:serenity-core:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-junit:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-screenplay:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-cucumber:${serenityCucumberVersion}"
    implementation 'org.slf4j:slf4j-simple:2.0.5'
    implementation "net.serenity-bdd:serenity-screenplay-rest:${serenityVersion}"

    //Test compilation
    testImplementation "junit:junit:${junit}"
    testImplementation "org.hamcrest:hamcrest-all:${hamcrest}"
    implementation 'org.slf4j:slf4j-simple:2.0.5'


    //Lombok dependencies
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"

    //Additional library
    implementation group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.12.0'
    implementation "com.google.code.gson:gson:2.8.9"
}

serenity {
    testRoot = "co.edu.udea.restapi.testing.runners"
    requirementsBaseDir = "src/test/resources/features"
}

jar {
    manifest {
        attributes(
                'Main-Class': 'co.edu.udea.restapi.testing.Main'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}